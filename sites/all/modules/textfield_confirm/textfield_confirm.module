<?php

/**
 * @file
 * Provides a form element that confirms two textfields are the same.
 */

/**
 * Implements hook_element_info().
 */
function textfield_confirm_element_info() {
  $types = array();

  $types['textfield_confirm'] = array(
    '#input' => TRUE,
    '#process' => array('_textfield_confirm_process_textfield'),
    '#theme_wrappers' => array('form_element'),
    '#element_validate' => array('_textfield_confirm_validate'),
    '#error_message' => t('The specified fields do not match.'),
    '#success_help' => t('Fields match: <span class="ok">yes</span>'),
    '#error_help' => t('Fields match: <span class="error">no</span>'),
    '#add_js' => TRUE,
  );

  if (module_exists('elements')) {
    $types['emailfield_confirm'] = $types['textfield_confirm'];
    $types['emailfield_confirm']['#process'][] = '_textfield_confirm_process_emailfield';
    $types['emailfield_confirm']['#element_validate'] = array('_textfield_confirm_emailfield_validate');
  }

  return $types;
}

/**
 * Expands a textfield_confirm field into two text boxes.
 */
function _textfield_confirm_process_textfield(array $element) {
  static $common_attributes = array(
    '#size',
    '#maxlength',
    '#required',
    '#autocomplete_path',
    '#placeholder',
  );

  static $attributes = array(
    'title',
    'description',
    'attributes',
    'autocomplete_path',
    'placeholder',
  );

  $element['text1'] =  array(
    '#type' => 'textfield',
    '#value' => empty($element['#value']) ? NULL : $element['#value']['text1'],
  );

  $element['text2'] =  array(
    '#type' => 'textfield',
    '#value' => empty($element['#value']) ? NULL : $element['#value']['text2'],
  );

  // Set common properties.
  foreach ($common_attributes as $attribute) {
    if (!isset($element[$attribute])) {
      continue;
    }

    $element['text1'][$attribute] = $element[$attribute];
    $element['text2'][$attribute] = $element[$attribute];
    unset($element[$attribute]);
  }

  // Set individual properties.
  foreach ($attributes as $attribute) {
    if (isset($element['#primary_' . $attribute])) {
      $element['text1']['#' . $attribute] = $element['#primary_' . $attribute];
    }
    if (isset($element['#secondary_' . $attribute])) {
      $element['text2']['#' . $attribute] = $element['#secondary_' . $attribute];
    }
  }

  $element['text1']['#attributes']['class'][] = 'textfield-confirm-field';
  $element['text2']['#attributes']['class'][] = 'textfield-confirm-confirm';

  $element['#tree'] = TRUE;
  $element['#required'] = FALSE;

  if ($element['#add_js']) {
    $element['#attached']['js'][] = drupal_get_path('module', 'textfield_confirm') . '/textfield_confirm.js';

    $setting = array(
      'textfield_confirm' => array(
        'success' => $element['#success_help'],
        'error' => $element['#error_help'],
      ),
    );

    $element['#attached']['js'][] = array(
      'data' => $setting,
      'type' => 'setting',
    );
  }

  return $element;
}

/**
 * Converts a textfield_confirm element into an emailfield_confirm element.
 */
function _textfield_confirm_process_emailfield(array $element) {
  $element['text1']['#type'] = 'emailfield';
  $element['text2']['#type'] = 'emailfield';

  // Stop the emailfield from repeating validation errors.
  $element['text1']['#element_validate'] = array();
  $element['text2']['#element_validate'] = array();

  return $element;
}

/**
 * Validates a textfield_confirm element.
 */
function _textfield_confirm_validate(array &$element, array &$element_state) {
  $text1 = $element['text1'];
  $text2 = $element['text2'];

  // Use strlen() instead of empty() since '0' is a valid string value. strlen()
  // is fine to use here, since we only care if the string has some length, not
  // its exact length.
  if (strlen($text1['#value']) || strlen($text2['#value'])) {
    if ($text1['#value'] !== $text2['#value']) {
      form_error($element, $element['#error_message']);
    }
  }
  elseif ($text1['#required'] && !empty($element_state['input'])) {
    $name = !empty($element['#title']) ? $element['#title'] : FALSE;
    if (!$name) {
      $name = !empty($text1['#title']) ? $text1['#title'] : t('The');
    }
    form_error($element, t('!name field is required.', array('!name' => $name)));
  }

  // The field must be converted from a two-element array into a single string
  // regardless of validation results.
  form_set_value($element, $text1['#value'], $element_state);
  $element['#value'] = $text1['#value'];
}

/**
 * Validates an emailfield_confirm element.
 */
function _textfield_confirm_emailfield_validate(array &$element, array &$element_state) {
  // Trim the values to be helpful.
  $element['text1']['#value'] = trim($element['text1']['#value']);
  $element['text2']['#value'] = trim($element['text2']['#value']);

  _textfield_confirm_validate($element, $element_state);
  elements_validate_email($element, $element_state);
}
