<?php 

function tap_job_invite_help($path, $arg) {
	switch ($path) {
		case "admin/help#tap_job_invite":
			return '<p>' . t("Invite Co-Workers/Collaborators to jobs.") . '</p>';
		break;
	}
}

function tap_job_invite_menu(){
   
    $items['job/%/invite'] = array(
        'title'             => 'Invite Co-Workers/Collaborators on Tap',
        'description'       => t('Invite co-workers/Collaborators.'),
        'access callback'   => 'user_access',
        'access arguments'  => array('access content'),
        'page callback'     => 'drupal_get_form',
        'page arguments'    => array('tap_job_invite_form_builder', 1),
    );

    //Autocomplete of the names of collaborators to invite.
    $items['collaborator/autocomplete'] = array(
        'title' => 'Autocomplete for collaborators',
        'page callback' => '_tap_job_invite_autocomplete',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK
    );
        
    return $items;
}

function tap_job_invite_form_builder($form, &$form_state, $jobid=''){
    $attach_form = array();
    // $node = new stdClass();
    // $node->type = 'job'; //content type
    $node = node_load((int) $jobid);
    field_attach_form('node', $node, $attach_form, $form_state, NULL, array('field_name' => 'field_co_workers'));
    $form['field_coworkers'] = $attach_form['field_co_workers'];
    $form['submit'] = array(
        '#type'         => 'submit',
        '#value'        => t('Submit'),
        '#weight'       => 10000,
    );

    return $form;
}

function tap_job_invite_multiple_field_remove_button_field_widgets_alter(&$fieldwidgets) {
  // Add new widget type in $fieldwidgets    
    array_push($fieldwidgets, 'user_reference_autocomplete');    
    return $fieldwidgets;
}

function tap_job_invite_form_builder_submit($form, &$form_state){

    $nid=(int)$form_state['build_info']['args'][0];
    $node=node_load($nid);

    $existing_coworkers = array();
    foreach($node->field_co_workers['und'] as $existing_coworker){
        array_push($existing_coworkers, $existing_coworker['uid']);
    }

    $ids = array();
    foreach($form_state['input']['field_coworkers']['und'] as $coworker){
        $openBrackPos=strpos($coworker['uid'], '[uid:')+4;
        $closeBrackPos=strpos($coworker['uid'], ']');
        $id=(int) substr($coworker['uid'], $openBrackPos+1, $closeBrackPos-$openBrackPos-1);
        if($id != 0){ // Account for empty text fields.
            if(!in_array($id, $existing_coworkers)){
                array_push($ids, $id);
            }
        }                    
    }

    debug($existing_coworkers);
    debug($ids);

    if(!empty($ids)){
        //Remove duplicate collaborators
        $ids=array_unique($ids, SORT_NUMERIC);  
        

        if(!empty($node->field_co_workers)){
            foreach($ids as $id){                    
                $uidArr=array('uid'=>$id);
                array_push($node->field_co_workers['und'], $uidArr);
            }                
        }else{
            $node->field_co_workers['und']=array();
            foreach($ids as $id){                    
                $uidArr=array('uid'=>$id);
                array_push($node->field_co_workers['und'], $uidArr);
            }                
        }

        //Save invited collaborators to DB.
        node_save($node);
        emailCollaborators($ids, $node);
    }

    //redirect user back to job page.
    drupal_set_message("Co-Workers have been notified.");
    drupal_goto("/node/".$nid);
}

function emailCollaborators($ids, $node){
    $query=db_select('users', 'u')    
        ->condition('uid', $ids)
        ->fields('u', array('name', 'mail'));

    $result=$query->execute();

    foreach($result as $row){

        $options = array('absolute' => TRUE);
        $jobPath=url('node/' . $node->nid, $options);
        $jobTitle=$node->title;

        global $user;
        $inviter=$user->name;

        $module = 'tap_job_invite';
        $key = 'key';
        $email = $row->mail;
        $language = language_default();
        $params = array();
        $from = NULL;
        $send = FALSE;
        $message = drupal_mail($module, $key, $email, $language, $params, $from, $send);

        $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';

        $message['subject'] = "Collaborator invitation at Tap";
        $message['body'] = array();
        $message['body'][] = "You have invited as a Collaborator by {$inviter} to the job <a href=\"{$jobPath}\">{$jobTitle}</a>. ";
        $message['body'][] = "Log in to join the workroom.";

        // Retrieve the responsible implementation for this message.
        $system = drupal_mail_system($module, $key);

        // Format the message body.
        $message = $system->format($message);

        // Send e-mail.
        $message['result'] = $system->mail($message);

    }
}


?>