<?php 

function owner_only_fields_help($path, $arg) {
	switch ($path) {
		case "admin/help#owner_only_fields":
			return '<p>' . t("Lets only the profile owner see his/her personal fields.") . '</p>';
		break;
	}
}

function owner_only_fields_views_pre_render(&$view){

	global $user;

	if($view->name == "account"){

 	}else if($view->name=="picture_header"){
 		//then add some fields		
 	}else if($view->name=="portfolio_header"){

 	}	
}


function owner_only_fields_form_alter(&$form, &$form_state, $form_id){
	//$form['profile-freelancer-field-about-me-add-more-wrapper']['#access'] = FALSE;	

	//Hide fields on account edit page.
	if($form_id=='user_profile_form'){
		file_put_contents('C:\Users\pc\Desktop\yes.txt', print_r($form, TRUE));	
		hide($form['legal']);
		hide($form['mimemail']);

		//Add "Cancel changes" to My Account and My Profile edit forms.
		$form['actions']['cancel_changes'] = array(
			'#type' => 'submit',
			'#value' => t('Cancel Changes'),
			'#access' => TRUE,
			'#weight' => 10,
			'#submit' => array('user_edit_cancel', 'node_form_submit_build_node'),
			'#limit_validation_errors' => array(),
		);	
	
		//Position "Cancel Account" button under "Save" button.
		if(arg(3)==null){
			//Cancel account button.
			$cancel=$form['actions']['cancel'];
			unset($form['actions']['cancel']);
			$cancel['#weight']=1000;
			$cancel['#attributes'] = array('class' => array('btn', 'btn-danger'));
			$form['cancel']=$cancel;
		}

		
	}else if($form_id=='user_login'){
		file_put_contents('C:\Users\pc\Desktop\form_alter_user_login.txt', print_r($form, TRUE));	
		$form['name']['#title']='E-mail';
		$form['name']['#description']='Enter your e-mail.';
	}else if($form_id=='portfolio_node_form'){
		file_put_contents('C:\Users\pc\Desktop\form_alter_portfolio_node_form.txt', print_r($form, TRUE));	

		//Change field labels
		$form['field_images']['und']['#title']='Add Images and Videos';
		$form['field_images']['und']['#file_upload_description']='<br>Only upload high quality images and videos of your work.<br> Individual images must be maximum <b>5MB, 32 megapixels, minimum 72dpi</b>.<br>
			First image you upload will be your cover image for this Project.<br><br>';
		$form['field_images']['und']['#file_upload_title']='Images';
		$form['field_portfolio_project_skills']['und']['#title']='What skills did you use here? Tick all that apply.<br>
		This is how we match you to Client\'s Projects.';
		
		//Change page title
		
	}else if($form_id=='user_register_form'){
		// if(strcmp(current_path(), 'client/register')==0){
		// 	$extra='We keep your personal information private and guarantee top quality and timely services or your money back<br>';
		// }else if(strcmp(current_path(), 'freelancer/register')==0){

		// }
		// if(isset($extra)){
		// 	$form['legal']['legal_accept']['#title']=$extra.$form['legal']['legal_accept']['#title'];
		// }
	}else if($form_id=='job_node_form'){
		hide($form['field_initial_candidates']);
		//hide($form['field_available_candidates']);
		hide($form['field_final_candidate']);
	}


	
	//Add "Cancel changes" to node edit form.
	if(array_key_exists('node', $form_state)){
		$node = $form_state['node'];
		if (!isset($node->nid) || isset($node->is_new)) {
		// This is a new node.
		}
		else {
			// This is not a new node.
			$form['actions']['cancel_changes'] = array(
			'#type' => 'submit',
			'#value' => t('Cancel Changes'),
			'#access' => TRUE,
			'#weight' => 10,
			'#submit' => array('node_edit_cancel', 'node_form_submit_build_node'),
			'#limit_validation_errors' => array(),
		);	
		}
	}
	
}


/**
 * Node edit form cancel button callback.
 */
function node_edit_cancel($form, &$form_state) {
	// $fallback_destinaton = '<front>';
	// If edit, use the node itself as fallback.
	$node=node_load($form['#node']->nid);
	$node_uri=node_uri($node);
	$fallback_destinaton=$node_uri['path'];

	// Go to destination or fallback.
	$url = isset($_GET['destination']) ? $_GET['destination'] : $fallback_destinaton;

	drupal_set_message($node->type." changes cancelled", 'status');
	drupal_goto($url);
}

/**
 * User account/profile edit form cancel button callback.
 */
function user_edit_cancel($form, &$form_state) {
	// $fallback_destinaton = '<front>';
	// If edit, use the node itself as fallback.
	$user=user_load($form['#user']->uid);
	$user_uri=user_uri($user);
	$fallback_destinaton=$user_uri['path'];

	// Go to destination or fallback.
	$url = isset($_GET['destination']) ? $_GET['destination'] : $fallback_destinaton;

	if(arg(3)==null){
		drupal_set_message("Account changes cancelled", 'status');
	}else{
		if(in_array(strtolower(arg(3)), array_map('strtolower', user_roles()))){
			drupal_set_message("Profile changes cancelled", 'status');
		}
	}

	drupal_goto($url);
	// drupal_set_message("Changes cancelled", 'status');
}

function owner_only_fields_form_profile2_form_alter(&$form, &$form_state){	
	//Hide Profile2 fields on the freelancer registration page.
	if($form["#form_id"] != "user_profile_form"){
		$form['profile_freelancer']['field_about_me']['#access'] = FALSE;
		$form['profile_freelancer']['field_skills']['#access'] = FALSE;
		$form['profile_freelancer']['field_interests']['#access'] = FALSE;
		$form['profile_freelancer']['field_qualifications']['#access'] = FALSE;
		$form['profile_freelancer']['field_profile_picture']['#access'] = FALSE;
		//$form['profile_freelancer']['field_add']['und']['0']['locality_block']['dependent_locality']['#access'] = FALSE;
		
	}
	
}


function owner_only_fields_preprocess_page(&$vars, $hook) {
	global $user;
	$first=arg(0);
	$second=arg(1);
	$third=arg(2);
	$fourth=arg(3);

	//Change block title.
	//Not HTML title.
	if($first=='user' && $second=='login'){
		$vars['title']=t('Log In'); 
	}else if($first=='user' && $second=='password'){
		$vars['title']=t('Request new password'); 
	}else if($first=='user' && $second==null && !user_is_logged_in()){
		$vars['title']=t('Registered User Log In'); 
	}
	else if($first=='user' && $third=='edit'){
		$vars['title']=t('Edit My Account'); 

		$types=array();
		foreach(profile2_get_types() as $value){
			array_push($types, strtolower($value->type));
		}
		if(in_array(strtolower($fourth), $types)){
			$vars['title']=t('Edit My Profile'); 
		}

	}else if($first=='node' && $second=='add'){
		if(arg(2)=='portfolio'){
			$vars['title']=t('Create Project'); 
		}
	}


}


function owner_only_fields_node_validate($node, $form, &$form_state){
	file_put_contents('C:\Users\pc\Desktop\validate.txt', print_r($node, TRUE));
	if($node->type=='job'){
		file_put_contents('C:\Users\pc\Desktop\validate_form.txt', print_r($form, TRUE));		
		// form_set_error("name", 'wrong');	
	}
}

function owner_only_fields_node_presave($node){
	file_put_contents('C:\Users\pc\Desktop\node_presave.txt', print_r($node, TRUE));	
	if($node->type=='job'){
		file_put_contents('C:\Users\pc\Desktop\count.txt', print_r(count($node->field_available_candidates['und']), TRUE));	
		$data =array();
		$data['target_id']=39;	
		array_push($node->field_available_candidates['und'], $data);
	}
}